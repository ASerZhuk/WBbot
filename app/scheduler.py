import threading
import time
import schedule
from datetime import datetime, timedelta
from firebase_manager import FirebaseManager
from bot import bot

firebase_manager = FirebaseManager()

def remind_inactive_users():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –±–æ—Ç–∞ –±–æ–ª–µ–µ 7 –¥–Ω–µ–π
    inactive_users = firebase_manager.get_inactive_users(days=7)
    
    for user in inactive_users:
        user_id = user.get('user_id')
        attempts = user.get('attempts', 0)
        
        if attempts > 0:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏–º–µ–µ—Ç –ø–æ–ø—ã—Ç–∫–∏, –Ω–æ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –∏—Ö
            try:
                bot.send_message(
                    user_id,
                    f"üëã –ü—Ä–∏–≤–µ—Ç! –ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã –¥–∞–≤–Ω–æ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º.\n\n"
                    f"–£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å {attempts} –Ω–µ–∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ø—ã—Ç–æ–∫ –∞–Ω–∞–ª–∏–∑–∞. "
                    f"–ù–µ —É–ø—É—Å—Ç–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –æ—Ç–∑—ã–≤—ã –Ω–∞ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–µ –≤–∞—Å —Ç–æ–≤–∞—Ä—ã!"
                )
            except Exception:
                pass
        else:
            # –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –ø–æ–ø—ã—Ç–æ–∫
            try:
                markup = types.InlineKeyboardMarkup()
                payment_button = types.InlineKeyboardButton(
                    "üí≥ –ü–æ–ø–æ–ª–Ω–∏—Ç—å –ø–æ–ø—ã—Ç–∫–∏",
                    url=payment_manager.create_payment_link(user_id)
                )
                markup.add(payment_button)
                
                bot.send_message(
                    user_id,
                    "üëã –ü—Ä–∏–≤–µ—Ç! –ú—ã –∑–∞–º–µ—Ç–∏–ª–∏, —á—Ç–æ –≤—ã –¥–∞–≤–Ω–æ –Ω–µ –ø–æ–ª—å–∑–æ–≤–∞–ª–∏—Å—å –Ω–∞—à–∏–º –±–æ—Ç–æ–º.\n\n"
                    "–£ –≤–∞—Å –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å –ø–æ–ø—ã—Ç–∫–∏ –∞–Ω–∞–ª–∏–∑–∞. –ü–æ–ø–æ–ª–Ω–∏—Ç–µ –∏—Ö, —á—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å "
                    "–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –≤—Å–µ–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏ –±–æ—Ç–∞!",
                    reply_markup=markup
                )
            except Exception:
                pass

def run_scheduler():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –∑–∞–¥–∞—á"""
    # –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 12:00
    schedule.every().day.at("12:00").do(remind_inactive_users)
    
    while True:
        schedule.run_pending()
        time.sleep(60)

# –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
scheduler_thread = threading.Thread(target=run_scheduler)
scheduler_thread.daemon = True
scheduler_thread.start() 